#!/usr/bin/env python

import sys
sys.path.append("/usr/local/lib/python2.7/site-packages/")

from PySide.QtCore import QThread, Signal, QObject, QFile
from PySide.QtGui import QApplication, QFileDialog
from PySide.QtUiTools import QUiLoader

from sys import argv
from subprocess import check_output
import time


class RunPy(QThread):
	finished = Signal(str)

	def __init__(self, filename):
		QThread.__init__(self)
		self.filename = filename

	def _run(self):
		old_time = time.time()
		try:
			ret = check_output(["python", self.filename])
		except Exception, e:
			ret = str(e)
		during = time.time() - old_time
		return "During time: %.2fs \n\nOutput:\n%s" % (during, ret)

	def run(self):
		ret = self._run()
		self.finished.emit(ret)

class GuiProxy(QObject):
	def __init__(self, ui_file):
		loader = QUiLoader()
		f = QFile(ui_file)
		f.open(QFile.ReadOnly)
		self.widget = loader.load(f)
		f.close()
		# self.set_highlighter()
		self.set_connections()
		self.widget.show()

	def set_highlighter(self):
		editor = self.widget.codeEdit
		self.highlighter = PythonHighlighter(editor.document())

	def openfile(self):
		self.fileName = QFileDialog.getOpenFileName(self.widget, "Open Source", "./")[0]
		f = open(self.fileName, "r")
		self.widget.codeEdit.setPlainText (f.read())
		f.close()

	def savefile(self, filename=None):
		content = self.widget.codeEdit.toPlainText()
		if not filename:
			filename = QFileDialog.getSaveFileName(self.widget, "Save Source", "./")[0]
		f = open(filename, "w")
		f.write(content)
		f.close()

	def runfile(self):
		self.savefile(self.fileName)
		self.runner = RunPy(self.fileName)
		self.runner.finished.connect(self.widget.resultBrowser.setPlainText)
		self.widget.resultBrowser.setPlainText("Running...")
		self.runner.start()

	def set_connections(self):
		self.widget.loadButton.clicked.connect(self.openfile)
		self.widget.saveButton.clicked.connect(self.savefile)
		self.widget.runButton.clicked.connect(self.runfile)

if __name__ == '__main__':
	app = QApplication(argv)
	gui = GuiProxy("bde.ui")
	sys.exit(app.exec_())