{"name":"Briareus","tagline":"Accelerating Python Applications using Cloud","body":"# Usage\r\n\r\nIn the first line of your source:\r\n\r\n    from Briareus import patch; patch()\r\n    \r\n## Interfaces\r\n\r\nAll interfaces are special comment, including\r\n\r\n    # remote\r\n    \r\n    # async\r\n    \r\n    # parallelize\r\n    \r\n### `#remote`\r\n\r\nThe functions marked by `#remote` will be migrating to cloud:\r\n\r\n### `#async`\r\n\r\nA function marked by `#async` will be called in an asynchronous way. Following functions will be start do not need to wait for this function's finish.\r\n\r\n### `#parallelize`\r\n\r\nAny `for` loop, `map` loop and list comprehension marked by comment `#paralleliz` will be evaluated in parallel. BUT IT IS PROGRAMMERS' DUTIES TO MAKE SURE THE LOOPS CAN BE PARALLELIZED.\r\n    \r\nIf there is any function that had been marked by comment `# remote`, there are more complex forms for `# parallelize` like,\r\n\r\n    # parallelize with consts A, B and C\r\n    \r\n    # parallelize with cached R\r\n    \r\nIn these examples, variants `A`, `B`, `C` and `D` will be cached un the cloud platform (assuming these variants are constant).\r\n\r\n# Configuration\r\n\r\n## Location of configuration files.\r\n\r\nBrareus read the configurations form below locations sequentially.\r\n\r\n1. /etc/briareus.conf\r\n2. ~/.briareus.conf\r\n3. ./briareus.conf\r\n    \r\n \r\n## Format of configuration files\r\n\r\n    {\r\n        \"host\": \"192.168.70.150\",    #Address of cloud platform\r\n        \"port\": 6379,                #Optional, port of Briareus\r\n    }\r\n    \r\n# Examples\r\n\r\n    # remote\r\n    def foo(…):\r\n        …\r\n        \r\n    foo()\r\n    \r\n`foo()` will be migrated to remote cloud platform\r\n\r\n    # async\r\n    def foo1(…):\r\n        …\r\n        \r\n    # async\r\n    def foo2(…):\r\n        …\r\n        \r\n    a = foo1(…)\r\n    b = foo2(…)\r\n    c = foo2(…)\r\n    \r\n    bar(a, b, c)\r\n    \r\n`a = foo1(…)`, `a = foo2(…)` and `c = foo2(…)` will be evaluated at the same time, and the evaluation of `bar(a,b,c)` will be started after all of `a`, `b` and `c` being calculated.\r\n    \r\n    #parallelize\r\n    for … in …:\r\n        …\r\n    \r\nThe `for` loop will be evaluated in parallel.\r\n\r\n    #remote\r\n    def func(A):\r\n        …\r\n        \r\n    #parallelize with cached a\r\n    for … in …:\r\n        …\r\n        func(a)\r\n        …\r\n        \r\nThe `for` loop will be evaluated in parallel, the evaluation of `func(q)` will be migrated to cloud, and const `a` will be cached in cloud.\r\n\r\n\r\n    ","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}